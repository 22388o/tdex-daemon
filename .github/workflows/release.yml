name: goreleaser

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
  

jobs:
  goreleaser:
    runs-on: ubuntu-20.04

    permissions: write-all

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get OSX cross-compiling targets
        run: |
          mkdir -p ../../osxcross/target
          docker run --name cross ghcr.io/gythialy/golang-cross-builder /bin/bash
          docker cp -a cross:/osxcross/target/bin /home/runner/work/osxcross/target

      - name: Install ubuntu cross-compiling targets
        run: |
          sudo dpkg --add-architecture arm64                      \
          && sudo dpkg --add-architecture armel                      \
          && sudo dpkg --add-architecture armhf                      \
          && sudo dpkg --add-architecture i386                       \
          && sudo dpkg --add-architecture mips                       \
          && sudo dpkg --add-architecture mipsel                     \
          && sudo dpkg --add-architecture powerpc                    \
          && sudo dpkg --add-architecture ppc64el                    \
          && sudo apt-get update                                     \
          && sudo apt-get install -y -q                              \
                  autoconf                                       \
                  automake                                       \
                  autotools-dev                                  \
                  bc                                             \
                  binfmt-support                                 \
                  binutils-multiarch                             \
                  binutils-multiarch-dev                         \
                  build-essential                                \
                  clang                                          \
                  crossbuild-essential-arm64                     \
                  crossbuild-essential-armel                     \
                  crossbuild-essential-armhf                     \
                  crossbuild-essential-mipsel                    \
                  crossbuild-essential-ppc64el                   \
                  curl                                           \
                  devscripts                                     \
                  gdb                                            \
                  git-core                                       \
                  libtool                                        \
                  llvm                                           \
                  mercurial                                      \
                  multistrap                                     \
                  patch                                          \
                  software-properties-common                     \
                  subversion                                     \
                  wget                                           \
                  xz-utils                                       \
                  cmake                                          \
                  qemu-user-static                               \
                  libxml2-dev                                    \
                  lzma-dev                                       \
                  openssl                                        \
                  mingw-w64                                      \
                  musl-tools                                     \
                  libssl-dev                                     \
            && sudo apt -y autoremove                           \
            && sudo apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

      - run: which aarch64-linux-gnu-gcc

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}